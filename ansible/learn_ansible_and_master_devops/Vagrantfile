# -*- mode: ruby -*-
# vi: set ft=ruby :

# README
#
# Getting Started:
# 1. vagrant plugin install vagrant-hostmanager
# 2. vagrant up
# 3. vagrant ssh
#
# This should put you at the control host
#  with access, by name, to other vms
Vagrant.configure(2) do |config|
  #  config.hostmanager.enabled = true
  
    config.vm.box = "ubuntu/trusty64"
  
    config.vm.define "ansible", primary: true do |h|
      h.vm.box = 	"centos/7"
      h.vm.network "private_network", ip: "192.168.33.10"
      h.vm.provision :shell, :inline => <<'EOF'
  
  cp /Users/alexey/.ssh/id_rsa.pub /vagrant/control.pub
  
  cat << 'SSHEOF' > /home/vagrant/.ssh/config
  Host *
    StrictHostKeyChecking no
    UserKnownHostsFile=/dev/null
  SSHEOF
  
  chown -R vagrant:vagrant /home/vagrant/.ssh/
  EOF
    end
  
    config.vm.define "web1" do |h|
      h.vm.network "private_network", ip: "192.168.33.20"
      h.vm.provision :shell, inline: 'cat /vagrant/control.pub >> /home/vagrant/.ssh/authorized_keys'
    end
  
    config.vm.define "web2" do |h|
      h.vm.network "private_network", ip: "192.168.33.30"
      h.vm.provision :shell, inline: 'cat /vagrant/control.pub >> /home/vagrant/.ssh/authorized_keys'
    end
  
    config.vm.define "nginx" do |h|
      h.vm.network "private_network", ip: "192.168.33.100"
      h.vm.provision :shell, inline: 'cat /vagrant/control.pub >> /home/vagrant/.ssh/authorized_keys'
    end
  
    config.vm.define "db" do |h|
      h.vm.network "private_network", ip: "192.168.33.40"
      h.vm.provision :shell, inline: 'cat /vagrant/control.pub >> /home/vagrant/.ssh/authorized_keys'
    end
  end
  